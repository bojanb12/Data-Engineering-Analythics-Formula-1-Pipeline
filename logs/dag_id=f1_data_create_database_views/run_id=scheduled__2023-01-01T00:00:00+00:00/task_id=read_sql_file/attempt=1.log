[2024-06-19T12:24:28.554+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:24:28.569+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:24:28.575+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:24:28.575+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-06-19T12:24:28.583+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:24:28.587+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1458) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:24:28.588+0000] {standard_task_runner.py:63} INFO - Started process 1459 to run task
[2024-06-19T12:24:28.588+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '54', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmp__cfsops']
[2024-06-19T12:24:28.589+0000] {standard_task_runner.py:91} INFO - Job 54: Subtask read_sql_file
[2024-06-19T12:24:28.626+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host eef124934bf8
[2024-06-19T12:24:28.688+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:24:28.689+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:24:28.690+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:24:28.691+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/decorators/base.py", line 265, in execute
    return_value = super().execute(context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/database_create_views_task.py", line 40, in read_sql_file
    with open(sql_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/home/bojan/DEProjekat/sql/DB_views.sql'
[2024-06-19T12:24:28.701+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T122428, end_date=20240619T122428
[2024-06-19T12:24:28.710+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 54 for task read_sql_file ([Errno 2] No such file or directory: '/home/bojan/DEProjekat/sql/DB_views.sql'; 1459)
[2024-06-19T12:24:28.721+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-06-19T12:24:28.737+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:24:28.739+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-06-19T12:24:50.692+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:24:50.708+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:24:50.714+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:24:50.714+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-06-19T12:24:50.722+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:24:50.727+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1469) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:24:50.728+0000] {standard_task_runner.py:63} INFO - Started process 1470 to run task
[2024-06-19T12:24:50.728+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '56', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmp5o5_cl1f']
[2024-06-19T12:24:50.729+0000] {standard_task_runner.py:91} INFO - Job 56: Subtask read_sql_file
[2024-06-19T12:24:50.761+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host eef124934bf8
[2024-06-19T12:24:50.816+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:24:50.817+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:24:50.817+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:24:50.818+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/decorators/base.py", line 265, in execute
    return_value = super().execute(context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/database_create_views_task.py", line 40, in read_sql_file
    with open(sql_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/home/bojan/DEProjekat/sql/DB_views.sql'
[2024-06-19T12:24:50.824+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T122450, end_date=20240619T122450
[2024-06-19T12:24:50.832+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 56 for task read_sql_file ([Errno 2] No such file or directory: '/home/bojan/DEProjekat/sql/DB_views.sql'; 1470)
[2024-06-19T12:24:50.861+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-06-19T12:24:50.880+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:24:50.882+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-06-19T12:25:36.152+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:25:36.169+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:25:36.173+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:25:36.174+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-06-19T12:25:36.183+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:25:36.186+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1485) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:25:36.187+0000] {standard_task_runner.py:63} INFO - Started process 1486 to run task
[2024-06-19T12:25:36.187+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '57', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmp_rhn1a07']
[2024-06-19T12:25:36.188+0000] {standard_task_runner.py:91} INFO - Job 57: Subtask read_sql_file
[2024-06-19T12:25:36.223+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host eef124934bf8
[2024-06-19T12:25:36.280+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:25:36.281+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:25:36.281+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:25:36.281+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/decorators/base.py", line 265, in execute
    return_value = super().execute(context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/database_create_views_task.py", line 40, in read_sql_file
    with open(sql_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: './sql/DB_views.sql'
[2024-06-19T12:25:36.288+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T122536, end_date=20240619T122536
[2024-06-19T12:25:36.296+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 57 for task read_sql_file ([Errno 2] No such file or directory: './sql/DB_views.sql'; 1486)
[2024-06-19T12:25:36.320+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-06-19T12:25:36.336+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:25:36.337+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-06-19T12:26:07.604+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:26:07.620+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:26:07.625+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:26:07.626+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-06-19T12:26:07.634+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:26:07.638+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1497) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:26:07.639+0000] {standard_task_runner.py:63} INFO - Started process 1498 to run task
[2024-06-19T12:26:07.639+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '59', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmps3b37t0u']
[2024-06-19T12:26:07.639+0000] {standard_task_runner.py:91} INFO - Job 59: Subtask read_sql_file
[2024-06-19T12:26:07.672+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host eef124934bf8
[2024-06-19T12:26:07.728+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:26:07.729+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:26:07.729+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:26:07.729+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/decorators/base.py", line 265, in execute
    return_value = super().execute(context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/database_create_views_task.py", line 40, in read_sql_file
    with open(sql_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: './sql/DB_views.sql'
[2024-06-19T12:26:07.736+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T122607, end_date=20240619T122607
[2024-06-19T12:26:07.743+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 59 for task read_sql_file ([Errno 2] No such file or directory: './sql/DB_views.sql'; 1498)
[2024-06-19T12:26:07.772+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-06-19T12:26:07.787+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:26:07.789+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-06-19T12:27:12.988+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:27:13.006+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:27:13.013+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:27:13.013+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-06-19T12:27:13.021+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:27:13.025+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1515) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:27:13.026+0000] {standard_task_runner.py:63} INFO - Started process 1516 to run task
[2024-06-19T12:27:13.026+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '61', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmprnzpdnw6']
[2024-06-19T12:27:13.027+0000] {standard_task_runner.py:91} INFO - Job 61: Subtask read_sql_file
[2024-06-19T12:27:13.063+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host eef124934bf8
[2024-06-19T12:27:13.122+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:27:13.122+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:27:13.123+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:27:13.123+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/decorators/base.py", line 265, in execute
    return_value = super().execute(context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/database_create_views_task.py", line 40, in read_sql_file
    with open(sql_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'sql/DB_views.sql'
[2024-06-19T12:27:13.131+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T122713, end_date=20240619T122713
[2024-06-19T12:27:13.138+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 61 for task read_sql_file ([Errno 2] No such file or directory: 'sql/DB_views.sql'; 1516)
[2024-06-19T12:27:13.159+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-06-19T12:27:13.175+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:27:13.178+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-06-19T12:29:58.433+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:29:58.449+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:29:58.454+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:29:58.454+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 2
[2024-06-19T12:29:58.463+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:29:58.466+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1552) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:29:58.467+0000] {standard_task_runner.py:63} INFO - Started process 1553 to run task
[2024-06-19T12:29:58.467+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '62', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmpnkggz9_e']
[2024-06-19T12:29:58.468+0000] {standard_task_runner.py:91} INFO - Job 62: Subtask read_sql_file
[2024-06-19T12:29:58.499+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host eef124934bf8
[2024-06-19T12:29:58.555+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:29:58.555+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:29:58.556+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:29:58.556+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/decorators/base.py", line 265, in execute
    return_value = super().execute(context)
                   ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/database_create_views_task.py", line 40, in read_sql_file
    with open(sql_path, 'r') as file:
         ^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: '/opt/airflow/sql'
[2024-06-19T12:29:58.563+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T122958, end_date=20240619T122958
[2024-06-19T12:29:58.570+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 62 for task read_sql_file ([Errno 2] No such file or directory: '/opt/airflow/sql'; 1553)
[2024-06-19T12:29:58.600+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-06-19T12:29:58.616+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:29:58.617+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-06-19T12:44:59.388+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:44:59.406+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:44:59.411+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:44:59.411+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-06-19T12:44:59.420+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:44:59.424+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1347) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:44:59.424+0000] {standard_task_runner.py:63} INFO - Started process 1348 to run task
[2024-06-19T12:44:59.425+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '54', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmpmcd1gzvv']
[2024-06-19T12:44:59.426+0000] {standard_task_runner.py:91} INFO - Job 54: Subtask read_sql_file
[2024-06-19T12:44:59.458+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host 3a98e934d90a
[2024-06-19T12:44:59.521+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:44:59.522+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:44:59.523+0000] {python.py:237} INFO - Done. Returned value was: ----------------- Drivers by wins in the 2___ year --------------


CREATE OR REPLACE VIEW "DriverWins2024View" AS
WITH DriverWinsRanked AS (
    SELECT
        "dd"."driverRef" AS "driver_reference",
        "dd"."forename" AS "driver_forename",
        "dd"."surname" AS "driver_surname",
        "dd"."dob" AS "driver_dob",
        "dd"."nationality" AS "driver_nationality",
        "dd"."code" AS "driver_code",
        "ds"."wins" AS "wins_in_2024",
        ROW_NUMBER() OVER(PARTITION BY "dd"."driverRef" ORDER BY "ds"."wins" DESC) AS "win_rank"
    FROM
        "driverDim" "dd"
    JOIN
        "driverStandingsDim" "ds" ON "dd"."driverId" = "ds"."driverId"
    JOIN
        "raceResultsFact" "rf" ON "ds"."driverStandingsId" = "rf"."driverStandingsId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
    WHERE
        EXTRACT(YEAR FROM "rd"."date") = 2024  -- Filter for races in year ____
)
SELECT
    "driver_reference",
    "driver_forename",
    "driver_surname",
    "driver_dob",
    "driver_nationality",
    "driver_code",
    "wins_in_2024"
FROM
    DriverWinsRanked
WHERE
    "win_rank" = 1  -- Select only the top-ranked rows (maximum wins for each driver)
ORDER BY
    "wins_in_2024" DESC;  -- Order by wins in descending order


----------------------- Constructor wins by year ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorWins2024View" AS
WITH ConstructorWinsRanked AS (
    SELECT
        "cd"."constructorRef" AS "constructor_reference",
        "cd"."name" AS "constructor_name",
        "cd"."nationality_constructors" AS "constructor_nationality",
        "cs"."wins_constructorstandings" AS "wins_in_2024",
        ROW_NUMBER() OVER(PARTITION BY "cd"."constructorRef" ORDER BY "cs"."wins_constructorstandings" DESC) AS "win_rank"
    FROM
        "constructorDim" "cd"
    JOIN
        "constructorStandingsDim" "cs" ON "cd"."constructorId" = "cs"."constructorId"
    JOIN
        "raceResultsFact" "rf" ON "cs"."constructorStandingsId" = "rf"."constructorStandingsId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
    WHERE
        EXTRACT(YEAR FROM "rd"."date") = 2024  -- Filter for races in the year 2024
)
SELECT
    "constructor_reference",
    "constructor_name",
    "constructor_nationality",
    "wins_in_2024"
FROM
    ConstructorWinsRanked
WHERE
    "win_rank" = 1  -- Select only the top-ranked rows (maximum wins for each constructor)
ORDER BY
    "wins_in_2024" DESC;  -- Order by wins in descending order



----------------------- Driver performance by circuit ----------------------------------------------------------------------

	
	
CREATE OR REPLACE VIEW "DriverPerformanceByCircuitView" AS
SELECT
    dd.driverRef AS driver_reference,
    dd.forename AS driver_forename,
    dd.surname AS driver_surname,
    cd.name_y AS circuit_name,
    AVG(rf.positionOrder) AS avg_finish_position,
    COUNT(rf.resultId) AS races_count,
    SUM(rf.points) AS total_points,
    MAX(rf.positionOrder) AS best_finish_position,
    MIN(rf.positionOrder) AS worst_finish_position
FROM
    driverDim dd
JOIN
    raceResultsFact rf ON dd.driverId = rf.driverId
JOIN
    raceDim rd ON rf.raceId = rd.raceId
JOIN
    circuitDim cd ON rd.circuitId = cd.circuitId
GROUP BY
    dd.driverRef, dd.forename, dd.surname, cd.name_y
ORDER BY
    dd.driverRef, cd.name_y;



----------------------- Construtor perfomance by season ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorPerformanceOverSeasonsView" AS
SELECT
    "cd"."constructorRef" AS "constructor_reference",
    "cd"."name" AS "constructor_name",
    "rd"."year" AS "season_year",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    COUNT(DISTINCT "rd"."raceId") AS "races_entered",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "constructorDim" "cd"
JOIN
    "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "cd"."constructorRef", "cd"."name", "rd"."year"
ORDER BY
    "cd"."constructorRef", "rd"."year";
	
	
----------------------- Driver perfomance trends ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "DriverPerformanceTrendsView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rd"."year" AS "season_year",
    AVG("rf"."positionOrder") AS "avg_finish_position",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "driverDim" "dd"
JOIN
    "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname", "rd"."year"
ORDER BY
    "dd"."driverRef", "rd"."year";



----------------------- Circuit records ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "CircuitRecordsView" AS
SELECT
    "cd"."name_y" AS "circuit_name",
    "rd"."year" AS "season_year",
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rf"."fastestLapTime" AS "fastest_lap_time",
    "rf"."fastestLapSpeed" AS "fastest_lap_speed"
FROM
    "raceResultsFact" "rf"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
JOIN
    "circuitDim" "cd" ON "rd"."circuitId" = "cd"."circuitId"
JOIN
    "driverDim" "dd" ON "rf"."driverId" = "dd"."driverId"
WHERE
    "rf"."fastestLapTime" IS NOT NULL
ORDER BY
    "cd"."name_y", "rd"."year", "rf"."fastestLapTime";
	


----------------------- Pit stop effectivness ----------------------------------------------------------------------



CREATE OR REPLACE VIEW "PitStopEffectivenessView" AS
SELECT
    "rd"."year" AS "season_year",
    "cd"."name" AS "constructor_name",
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rf"."positionOrder" AS "finish_position",
    COUNT("ps"."stop") AS "pit_stops_count",
    AVG("ps"."duration") AS "avg_pit_stop_duration"
FROM
    "pitStopsDim" "ps"
JOIN
    "raceResultsFact" "rf" ON "ps"."raceId" = "rf"."raceId" AND "ps"."driverId" = "rf"."driverId"
JOIN
    "driverDim" "dd" ON "ps"."driverId" = "dd"."driverId"
JOIN
    "constructorDim" "cd" ON "rf"."constructorId" = "cd"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "rd"."year", "cd"."name", "dd"."driverRef", "dd"."forename", "dd"."surname", "rf"."positionOrder"
ORDER BY
    "rd"."year", "cd"."name", "dd"."driverRef";


----------------------- Driver winning and podium streaks ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "DriverWinningPodiumStreaksView" AS
WITH RankedResults AS (
    SELECT
        "dd"."driverRef" AS "driver_reference",
        "dd"."forename" AS "driver_forename",
        "dd"."surname" AS "driver_surname",
        "rd"."year" AS "season_year",
        "rd"."date" AS "race_date",
        "rf"."positionOrder" AS "finish_position",
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef", "rf"."positionOrder" <= 3 ORDER BY "rd"."date") AS "podium_streak",
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef", "rf"."positionOrder" = 1 ORDER BY "rd"."date") AS "win_streak"
    FROM
        "driverDim" "dd"
    JOIN
        "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
),
PodiumStreaks AS (
    SELECT
        "driver_reference",
        "driver_forename",
        "driver_surname",
        COUNT(*) AS "streak_length",
        "podium_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" <= 3
    GROUP BY
        "driver_reference", "driver_forename", "driver_surname", "podium_streak"
),
WinningStreaks AS (
    SELECT
        "driver_reference",
        "driver_forename",
        "driver_surname",
        COUNT(*) AS "streak_length",
        "win_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" = 1
    GROUP BY
        "driver_reference", "driver_forename", "driver_surname", "win_streak"
)
SELECT
    "ps"."driver_reference",
    "ps"."driver_forename",
    "ps"."driver_surname",
    MAX("ps"."streak_length") AS "longest_podium_streak",
    COALESCE(MAX("ws"."streak_length"), 0) AS "longest_winning_streak"
FROM
    PodiumStreaks ps
LEFT JOIN
    WinningStreaks ws ON ps."driver_reference" = ws."driver_reference" AND ps."driver_forename" = ws."driver_forename" AND ps."driver_surname" = ws."driver_surname"
GROUP BY
    ps."driver_reference", ps."driver_forename", ps."driver_surname"
ORDER BY
    "longest_podium_streak" DESC, "longest_winning_streak" DESC;



----------------------- Constructor winning and podium streaks ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorWinningPodiumStreaksView" AS
WITH RankedResults AS (
    SELECT
        "cd"."constructorRef" AS "constructor_reference",
        "cd"."name" AS "constructor_name",
        "rd"."year" AS "season_year",
        "rd"."date" AS "race_date",
        "rf"."positionOrder" AS "finish_position",
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef", "rf"."positionOrder" <= 3 ORDER BY "rd"."date") AS "podium_streak",
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef", "rf"."positionOrder" = 1 ORDER BY "rd"."date") AS "win_streak"
    FROM
        "constructorDim" "cd"
    JOIN
        "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
),
PodiumStreaks AS (
    SELECT
        "constructor_reference",
        "constructor_name",
        COUNT(*) AS "streak_length",
        "podium_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" <= 3
    GROUP BY
        "constructor_reference", "constructor_name", "podium_streak"
),
WinningStreaks AS (
    SELECT
        "constructor_reference",
        "constructor_name",
        COUNT(*) AS "streak_length",
        "win_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" = 1
    GROUP BY
        "constructor_reference", "constructor_name", "win_streak"
)
SELECT
    "ps"."constructor_reference",
    "ps"."constructor_name",
    MAX("ps"."streak_length") AS "longest_podium_streak",
    COALESCE(MAX("ws"."streak_length"), 0) AS "longest_winning_streak"
FROM
    PodiumStreaks ps
LEFT JOIN
    WinningStreaks ws ON ps."constructor_reference" = ws."constructor_reference" AND ps."constructor_name" = ws."constructor_name"
GROUP BY
    ps."constructor_reference", ps."constructor_name"
ORDER BY
    "longest_podium_streak" DESC, "longest_winning_streak" DESC;


----------------------- Constructor seasonal comparison ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorSeasonalComparisonsView" AS
SELECT
    "cd"."constructorRef" AS "constructor_reference",
    "cd"."name" AS "constructor_name",
    "rd"."year" AS "season_year",
    AVG("rf"."positionOrder") AS "avg_finish_position",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "constructorDim" "cd"
JOIN
    "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "cd"."constructorRef", "cd"."name", "rd"."year"
ORDER BY
    "cd"."constructorRef", "rd"."year";
	

----------------------- Driver seasonal comparison ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "DriverSeasonalComparisonsView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rd"."year" AS "season_year",
    AVG("rf"."positionOrder") AS "avg_finish_position",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "driverDim" "dd"
JOIN
    "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname", "rd"."year"
ORDER BY
    "dd"."driverRef", "rd"."year";
	
	
----------------------- Qualifications performance ----------------------------------------------------------------------

	

CREATE OR REPLACE VIEW "DriverQualificationPerformanceView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    AVG("qd"."quali_time") AS "avg_qualifying_time",
    COUNT(CASE WHEN "qd"."quali_time" IS NOT NULL AND "qd"."quali_time" = '00:00:00' THEN 1 ELSE NULL END) AS "pole_positions"
FROM
    "driverDim" "dd"
JOIN
    "qualificationsDim" "qd" ON "dd"."driverId" = "qd"."driverId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname"
ORDER BY
    "avg_qualifying_time";


----------------------- Driver seasonal performance ----------------------------------------------------------------------



CREATE OR REPLACE VIEW "DriverSeasonalPerformanceView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rd"."year" AS "season_year",
    SUM("rf"."points") AS "total_points",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    AVG("rf"."positionOrder") AS "avg_finish_position"
FROM
    "driverDim" "dd"
JOIN
    "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname", "rd"."year"
ORDER BY
    "dd"."driverRef", "season_year";



----------------------- Constructor seasonal performance ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorSeasonalPerformanceView" AS
SELECT
    "cd"."constructorRef" AS "constructor_reference",
    "cd"."name" AS "constructor_name",
    "rd"."year" AS "season_year",
    SUM("rf"."points") AS "total_points",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    AVG("rf"."positionOrder") AS "avg_finish_position"
FROM
    "constructorDim" "cd"
JOIN
    "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "cd"."constructorRef", "cd"."name", "rd"."year"
ORDER BY
    "cd"."constructorRef", "season_year";


[2024-06-19T12:44:59.523+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:44:59.540+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T124459, end_date=20240619T124459
[2024-06-19T12:44:59.557+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-06-19T12:44:59.572+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:44:59.574+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
[2024-06-19T12:47:32.480+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-06-19T12:47:32.497+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:47:32.503+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [queued]>
[2024-06-19T12:47:32.504+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-06-19T12:47:32.512+0000] {taskinstance.py:2330} INFO - Executing <Task(_PythonDecoratedOperator): read_sql_file> on 2023-01-01 00:00:00+00:00
[2024-06-19T12:47:32.516+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1392) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-06-19T12:47:32.516+0000] {standard_task_runner.py:63} INFO - Started process 1393 to run task
[2024-06-19T12:47:32.517+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'f1_data_create_database_views', 'read_sql_file', 'scheduled__2023-01-01T00:00:00+00:00', '--job-id', '59', '--raw', '--subdir', 'DAGS_FOLDER/database_create_views_task.py', '--cfg-path', '/tmp/tmpk4ha9om9']
[2024-06-19T12:47:32.517+0000] {standard_task_runner.py:91} INFO - Job 59: Subtask read_sql_file
[2024-06-19T12:47:32.551+0000] {task_command.py:426} INFO - Running <TaskInstance: f1_data_create_database_views.read_sql_file scheduled__2023-01-01T00:00:00+00:00 [running]> on host 3a98e934d90a
[2024-06-19T12:47:32.610+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='f1_data_create_database_views' AIRFLOW_CTX_TASK_ID='read_sql_file' AIRFLOW_CTX_EXECUTION_DATE='2023-01-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-01-01T00:00:00+00:00'
[2024-06-19T12:47:32.610+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-06-19T12:47:32.611+0000] {python.py:237} INFO - Done. Returned value was: ----------------- Drivers by wins in the 2___ year --------------


CREATE OR REPLACE VIEW "DriverWins2024View" AS
WITH DriverWinsRanked AS (
    SELECT
        "dd"."driverRef" AS "driver_reference",
        "dd"."forename" AS "driver_forename",
        "dd"."surname" AS "driver_surname",
        "dd"."dob" AS "driver_dob",
        "dd"."nationality" AS "driver_nationality",
        "dd"."code" AS "driver_code",
        "ds"."wins" AS "wins_in_2024",
        ROW_NUMBER() OVER(PARTITION BY "dd"."driverRef" ORDER BY "ds"."wins" DESC) AS "win_rank"
    FROM
        "driverDim" "dd"
    JOIN
        "driverStandingsDim" "ds" ON "dd"."driverId" = "ds"."driverId"
    JOIN
        "raceResultsFact" "rf" ON "ds"."driverStandingsId" = "rf"."driverStandingsId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
    WHERE
        EXTRACT(YEAR FROM "rd"."date") = 2024  -- Filter for races in year ____
)
SELECT
    "driver_reference",
    "driver_forename",
    "driver_surname",
    "driver_dob",
    "driver_nationality",
    "driver_code",
    "wins_in_2024"
FROM
    DriverWinsRanked
WHERE
    "win_rank" = 1  -- Select only the top-ranked rows (maximum wins for each driver)
ORDER BY
    "wins_in_2024" DESC;  -- Order by wins in descending order


----------------------- Constructor wins by year ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorWins2024View" AS
WITH ConstructorWinsRanked AS (
    SELECT
        "cd"."constructorRef" AS "constructor_reference",
        "cd"."name" AS "constructor_name",
        "cd"."nationality_constructors" AS "constructor_nationality",
        "cs"."wins_constructorstandings" AS "wins_in_2024",
        ROW_NUMBER() OVER(PARTITION BY "cd"."constructorRef" ORDER BY "cs"."wins_constructorstandings" DESC) AS "win_rank"
    FROM
        "constructorDim" "cd"
    JOIN
        "constructorStandingsDim" "cs" ON "cd"."constructorId" = "cs"."constructorId"
    JOIN
        "raceResultsFact" "rf" ON "cs"."constructorStandingsId" = "rf"."constructorStandingsId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
    WHERE
        EXTRACT(YEAR FROM "rd"."date") = 2024  -- Filter for races in the year 2024
)
SELECT
    "constructor_reference",
    "constructor_name",
    "constructor_nationality",
    "wins_in_2024"
FROM
    ConstructorWinsRanked
WHERE
    "win_rank" = 1  -- Select only the top-ranked rows (maximum wins for each constructor)
ORDER BY
    "wins_in_2024" DESC;  -- Order by wins in descending order



----------------------- Driver performance by circuit ----------------------------------------------------------------------

	
	
CREATE OR REPLACE VIEW "DriverPerformanceByCircuitView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "cd"."name_y" AS "circuit_name",
    AVG("rf"."positionOrder") AS "avg_finish_position",
    COUNT("rf"."resultId") AS "races_count",
    SUM("rf"."points") AS "total_points",
    MAX("rf"."positionOrder") AS "best_finish_position",
    MIN("rf"."positionOrder") AS "worst_finish_position"
FROM
    "driverDim" "dd"
JOIN
    "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
JOIN
    "circuitDim" "cd" ON "rd"."circuitId" = "cd"."circuitId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname", "cd"."name_y"
ORDER BY
    "dd"."driverRef", "cd"."name_y";




----------------------- Construtor perfomance by season ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorPerformanceOverSeasonsView" AS
SELECT
    "cd"."constructorRef" AS "constructor_reference",
    "cd"."name" AS "constructor_name",
    "rd"."year" AS "season_year",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    COUNT(DISTINCT "rd"."raceId") AS "races_entered",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "constructorDim" "cd"
JOIN
    "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "cd"."constructorRef", "cd"."name", "rd"."year"
ORDER BY
    "cd"."constructorRef", "rd"."year";
	
	
----------------------- Driver perfomance trends ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "DriverPerformanceTrendsView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rd"."year" AS "season_year",
    AVG("rf"."positionOrder") AS "avg_finish_position",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "driverDim" "dd"
JOIN
    "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname", "rd"."year"
ORDER BY
    "dd"."driverRef", "rd"."year";



----------------------- Circuit records ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "CircuitRecordsView" AS
SELECT
    "cd"."name_y" AS "circuit_name",
    "rd"."year" AS "season_year",
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rf"."fastestLapTime" AS "fastest_lap_time",
    "rf"."fastestLapSpeed" AS "fastest_lap_speed"
FROM
    "raceResultsFact" "rf"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
JOIN
    "circuitDim" "cd" ON "rd"."circuitId" = "cd"."circuitId"
JOIN
    "driverDim" "dd" ON "rf"."driverId" = "dd"."driverId"
WHERE
    "rf"."fastestLapTime" IS NOT NULL
ORDER BY
    "cd"."name_y", "rd"."year", "rf"."fastestLapTime";
	


----------------------- Pit stop effectivness ----------------------------------------------------------------------



CREATE OR REPLACE VIEW "PitStopEffectivenessView" AS
SELECT
    "rd"."year" AS "season_year",
    "cd"."name" AS "constructor_name",
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rf"."positionOrder" AS "finish_position",
    COUNT("ps"."stop") AS "pit_stops_count",
    AVG("ps"."duration") AS "avg_pit_stop_duration"
FROM
    "pitStopsDim" "ps"
JOIN
    "raceResultsFact" "rf" ON "ps"."raceId" = "rf"."raceId" AND "ps"."driverId" = "rf"."driverId"
JOIN
    "driverDim" "dd" ON "ps"."driverId" = "dd"."driverId"
JOIN
    "constructorDim" "cd" ON "rf"."constructorId" = "cd"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "rd"."year", "cd"."name", "dd"."driverRef", "dd"."forename", "dd"."surname", "rf"."positionOrder"
ORDER BY
    "rd"."year", "cd"."name", "dd"."driverRef";


----------------------- Driver winning and podium streaks ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "DriverWinningPodiumStreaksView" AS
WITH RankedResults AS (
    SELECT
        "dd"."driverRef" AS "driver_reference",
        "dd"."forename" AS "driver_forename",
        "dd"."surname" AS "driver_surname",
        "rd"."year" AS "season_year",
        "rd"."date" AS "race_date",
        "rf"."positionOrder" AS "finish_position",
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef", "rf"."positionOrder" <= 3 ORDER BY "rd"."date") AS "podium_streak",
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "dd"."driverRef", "rf"."positionOrder" = 1 ORDER BY "rd"."date") AS "win_streak"
    FROM
        "driverDim" "dd"
    JOIN
        "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
),
PodiumStreaks AS (
    SELECT
        "driver_reference",
        "driver_forename",
        "driver_surname",
        COUNT(*) AS "streak_length",
        "podium_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" <= 3
    GROUP BY
        "driver_reference", "driver_forename", "driver_surname", "podium_streak"
),
WinningStreaks AS (
    SELECT
        "driver_reference",
        "driver_forename",
        "driver_surname",
        COUNT(*) AS "streak_length",
        "win_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" = 1
    GROUP BY
        "driver_reference", "driver_forename", "driver_surname", "win_streak"
)
SELECT
    "ps"."driver_reference",
    "ps"."driver_forename",
    "ps"."driver_surname",
    MAX("ps"."streak_length") AS "longest_podium_streak",
    COALESCE(MAX("ws"."streak_length"), 0) AS "longest_winning_streak"
FROM
    PodiumStreaks ps
LEFT JOIN
    WinningStreaks ws ON ps."driver_reference" = ws."driver_reference" AND ps."driver_forename" = ws."driver_forename" AND ps."driver_surname" = ws."driver_surname"
GROUP BY
    ps."driver_reference", ps."driver_forename", ps."driver_surname"
ORDER BY
    "longest_podium_streak" DESC, "longest_winning_streak" DESC;



----------------------- Constructor winning and podium streaks ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorWinningPodiumStreaksView" AS
WITH RankedResults AS (
    SELECT
        "cd"."constructorRef" AS "constructor_reference",
        "cd"."name" AS "constructor_name",
        "rd"."year" AS "season_year",
        "rd"."date" AS "race_date",
        "rf"."positionOrder" AS "finish_position",
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef", "rf"."positionOrder" <= 3 ORDER BY "rd"."date") AS "podium_streak",
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef" ORDER BY "rd"."date") - 
        ROW_NUMBER() OVER (PARTITION BY "cd"."constructorRef", "rf"."positionOrder" = 1 ORDER BY "rd"."date") AS "win_streak"
    FROM
        "constructorDim" "cd"
    JOIN
        "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
    JOIN
        "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
),
PodiumStreaks AS (
    SELECT
        "constructor_reference",
        "constructor_name",
        COUNT(*) AS "streak_length",
        "podium_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" <= 3
    GROUP BY
        "constructor_reference", "constructor_name", "podium_streak"
),
WinningStreaks AS (
    SELECT
        "constructor_reference",
        "constructor_name",
        COUNT(*) AS "streak_length",
        "win_streak"
    FROM
        RankedResults
    WHERE
        "finish_position" = 1
    GROUP BY
        "constructor_reference", "constructor_name", "win_streak"
)
SELECT
    "ps"."constructor_reference",
    "ps"."constructor_name",
    MAX("ps"."streak_length") AS "longest_podium_streak",
    COALESCE(MAX("ws"."streak_length"), 0) AS "longest_winning_streak"
FROM
    PodiumStreaks ps
LEFT JOIN
    WinningStreaks ws ON ps."constructor_reference" = ws."constructor_reference" AND ps."constructor_name" = ws."constructor_name"
GROUP BY
    ps."constructor_reference", ps."constructor_name"
ORDER BY
    "longest_podium_streak" DESC, "longest_winning_streak" DESC;


----------------------- Constructor seasonal comparison ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorSeasonalComparisonsView" AS
SELECT
    "cd"."constructorRef" AS "constructor_reference",
    "cd"."name" AS "constructor_name",
    "rd"."year" AS "season_year",
    AVG("rf"."positionOrder") AS "avg_finish_position",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "constructorDim" "cd"
JOIN
    "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "cd"."constructorRef", "cd"."name", "rd"."year"
ORDER BY
    "cd"."constructorRef", "rd"."year";
	

----------------------- Driver seasonal comparison ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "DriverSeasonalComparisonsView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rd"."year" AS "season_year",
    AVG("rf"."positionOrder") AS "avg_finish_position",
    SUM("rf"."points") AS "total_points",
    COUNT("rf"."resultId") AS "races_count",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    SUM(CASE WHEN "rf"."positionOrder" <= 3 THEN 1 ELSE 0 END) AS "podiums"
FROM
    "driverDim" "dd"
JOIN
    "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname", "rd"."year"
ORDER BY
    "dd"."driverRef", "rd"."year";
	
	
----------------------- Qualifications performance ----------------------------------------------------------------------

	

CREATE OR REPLACE VIEW "DriverQualificationPerformanceView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    AVG("qd"."quali_time") AS "avg_qualifying_time",
    COUNT(CASE WHEN "qd"."quali_time" IS NOT NULL AND "qd"."quali_time" = '00:00:00' THEN 1 ELSE NULL END) AS "pole_positions"
FROM
    "driverDim" "dd"
JOIN
    "qualificationsDim" "qd" ON "dd"."driverId" = "qd"."driverId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname"
ORDER BY
    "avg_qualifying_time";


----------------------- Driver seasonal performance ----------------------------------------------------------------------



CREATE OR REPLACE VIEW "DriverSeasonalPerformanceView" AS
SELECT
    "dd"."driverRef" AS "driver_reference",
    "dd"."forename" AS "driver_forename",
    "dd"."surname" AS "driver_surname",
    "rd"."year" AS "season_year",
    SUM("rf"."points") AS "total_points",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    AVG("rf"."positionOrder") AS "avg_finish_position"
FROM
    "driverDim" "dd"
JOIN
    "raceResultsFact" "rf" ON "dd"."driverId" = "rf"."driverId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "dd"."driverRef", "dd"."forename", "dd"."surname", "rd"."year"
ORDER BY
    "dd"."driverRef", "season_year";



----------------------- Constructor seasonal performance ----------------------------------------------------------------------


CREATE OR REPLACE VIEW "ConstructorSeasonalPerformanceView" AS
SELECT
    "cd"."constructorRef" AS "constructor_reference",
    "cd"."name" AS "constructor_name",
    "rd"."year" AS "season_year",
    SUM("rf"."points") AS "total_points",
    SUM(CASE WHEN "rf"."positionOrder" = 1 THEN 1 ELSE 0 END) AS "wins",
    AVG("rf"."positionOrder") AS "avg_finish_position"
FROM
    "constructorDim" "cd"
JOIN
    "raceResultsFact" "rf" ON "cd"."constructorId" = "rf"."constructorId"
JOIN
    "raceDim" "rd" ON "rf"."raceId" = "rd"."raceId"
GROUP BY
    "cd"."constructorRef", "cd"."name", "rd"."year"
ORDER BY
    "cd"."constructorRef", "season_year";


[2024-06-19T12:47:32.611+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-06-19T12:47:32.628+0000] {taskinstance.py:1206} INFO - Marking task as SUCCESS. dag_id=f1_data_create_database_views, task_id=read_sql_file, run_id=scheduled__2023-01-01T00:00:00+00:00, execution_date=20230101T000000, start_date=20240619T124732, end_date=20240619T124732
[2024-06-19T12:47:32.650+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-06-19T12:47:32.665+0000] {taskinstance.py:3498} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-06-19T12:47:32.666+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
